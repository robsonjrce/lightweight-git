user: git
hosts:
  "%%SERVER_NAME%%:%%SERVER_PORT%%":
    listen: %%SERVER_PORT%%
    paths:
      /:
        redirect: 
          status: 302
          url:    https://%%SERVER_NAME%%
  "%%SERVER_NAME%%:%%SERVER_SECURE_PORT%%":
    listen:
      port: %%SERVER_SECURE_PORT%%
      ssl:
        # certificate-file: /etc/letsencrypt/live/example.com/fullchain.pem
        # key-file: /etc/letsencrypt/live/example.com/privkey.pem
        certificate-file: /etc/h2o/certificate/certificate.pem
        key-file: /etc/h2o/certificate/key.pem
        minimum-version: TLSv1.2
        cipher-preference: server
        cipher-suite: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
        # Oldest compatible clients: Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8
        # see: https://wiki.mozilla.org/Security/Server_Side_TLS
    paths:
      "/":
        mruby.handler: |
            lambda do |env|
                if /^\/?(cgit.cgi|css)?\/?(.*.png|.*.svg|.*.css|favicon.ico)?$/.match(env["PATH_INFO"])
                    return [399, {}, []]
                else
                    repo = env["PATH_INFO"].dup

                    # remove everything until the cgi script
                    repo = repo.gsub!(/^.*\/cgit\.cgi\//, "")
                    # removes everything after .git as we may be looking into something like <location>/cgit.cgi/<repository>.git/tree/
                    repo = repo.gsub!(/\.git.*$/, "")

                    # remove anything that is not allowed
                    repo.gsub!(/[^0-9A-Za-z_\-\/]/, "")

                    require "htlocked.rb"
                    htlocked = Htlocked.new(repo)

                    if ! htlocked.isLocked?
                      # require "authentication_basic.rb"
                      # AuthenticationBasic.new().call(env)

                      require "authentication_cookie.rb"
                      AuthenticationCookie.new(repo).call(env)
                    else
                      htlocked.lock
                    end
                end
            end
        file.dir: /var/www/htdocs/cgit/
        file.index: ["cgit.cgi"]
        file.custom-handler:
          extension: .cgi
          fastcgi.spawn: "exec /usr/local/share/h2o/fastcgi-cgi"
          setenv:
            SCRIPT_FILENAME: /var/www/htdocs/cgit/cgit.cgi

access-log: /var/log/h2o/access.log
error-log: /var/log/h2o/error.log
pid-file: /var/run/h2o/h2o.pid
http2-reprioritize-blocking-assets: ON # performance tuning option